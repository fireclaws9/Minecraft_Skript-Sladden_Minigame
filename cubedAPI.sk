function cubedAPI_getBoosters(apiKey: text, returnTimeStamp: boolean = true) :: texts:
	set {_apiRaw} to text from "http://api.playerservers.com/api/?key=%{_apiKey}%"
	if {_apiRaw} contains """error"":":
		return "SERVER_DATA_NOT_FOUND"
	if {_apiRaw} contains "[]":
		return "SERVER_BOOSTERS_NOT_FOUND"
	set {_apiRawSplit::*} to {_apiRaw} split by "["
	set {_apiRawSplit::*} to {_apiRawSplit::2} split by "]"
	replace all " " and "{" and "}" with "" in {_apiRawSplit::1}
	set {_boostersRaw::*} to {_apiRawSplit::1} split by ","
	loop ((amount of {_boostersRaw::*}) / 4) times:
		loop 2 times:
			set {_rawLine} to ((((loop-number-1) - 1) * 4) + loop-number-2 + 1)
			set {_rawLineSplit::*} to {_boostersRaw::%{_rawLine}%} split by """"
			add {_rawLineSplit::4} to {_lineSplitResult::*}
		if {_returnTimeStamp} is true:
			add "%{_lineSplitResult::1}%:%{_lineSplitResult::2}%" to {_finalResult::*}
		else:
			add "%{_lineSplitResult::1}%" to {_finalResult::*}
		delete {_lineSplitResult::*}
	return {_finalResult::*}

function cubedAPI_getVoters(apiKey: text) :: number:
	set {_apiRaw} to text from "http://api.playerservers.com/api/?key=%{_apiKey}%"
	if {_apiRaw} contains """error"":":
		return -1
	set {_apiRawSplit::*} to {_apiRaw} split by "]"
	replace all " " and "{" and "}" with "" in {_apiRawSplit::2}
	set {_backData::*} to {_apiRawSplit::2} split by ","
	loop {_backData::*}:
		if {_backData::%loop-index%} contains """votes"":":
			set {_votesRaw} to {_backData::%loop-index%}
	set {_votesRawSplit::*} to {_votesRaw} split by """"
	return ({_votesRawSplit::4} parsed as number)

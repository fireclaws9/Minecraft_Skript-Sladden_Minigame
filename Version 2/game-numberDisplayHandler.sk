function game_numberDisplayHandler_getNumberDisplay(number: number) :: text:
	set {_times} to 1
	while (true):
		if {_number} < (1000 ^ {_times}):
			set {_number} to ({_number} / (1000 ^ ({_times} - 1)))
			exit 1 loop
		add 1 to {_times}
	set {_display::*} to "" and "K" and "M" and "B" and "T" and "Qa" and "Qi" and "Sx" and "Sp" and "Oc" and "No" and "Dc" and "Ud" and "Dd" and "Td" and "Qad" and "Qid" and "Sxd" and "Spd" and "Ocd" and "Nod" and "Vg" and "Uvg"
	return "%{_number}%%{_display::%{_times}%}%"

function game_numberDisplayHandler_getTimeDisplay(number: number) :: text:
	set {_minutes} to floor({_number} / 60)
	set {_seconds} to ({_number} - ({_minutes} * 60))
	return "%game_numberDisplayHandler_getTimeDisplay_fixNumberDigit({_minutes})%:%game_numberDisplayHandler_getTimeDisplay_fixNumberDigit({_seconds})%"

function game_numberDisplayHandler_getTimeDisplay_fixNumberDigit(number: number) :: text:
	return (check [{_number} >= 10] ? "%{_number}%" : "0%{_number}%")